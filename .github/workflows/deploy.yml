name: 배포

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest # 작업이 실행될 환경
    steps:
    - name: 체크아웃
      uses: actions/checkout@v3

    - name: Node.js 설정
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: 프로젝트 의존성 설치
      run: npm install # 또는 yarn install

    - name: ESLint 검사 (경고 무시)
      run: npm run lint -- --quiet --max-warnings=5 || echo "ESLint 경고 발생 - 계속 진행"

    - name: 도커허브에 로그인
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER_NAME }}
        password: ${{ secrets.DOCKER_USER_PW }}

    - name: 이미지 빌드
      run: docker build -t ${{ secrets.DOCKER_USER_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }}-f .

    - name: 도커허브에 이미지 푸시
      run: docker push ${{ secrets.DOCKER_USER_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }}-f

    - name: AWS EC2에 SSH 접속 후 배포
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_IP }}
        port: 22
        username: ubuntu
        key: ${{ secrets.AWS_KEY }}
        script: |
          sudo timedatectl set-timezone Asia/Seoul
          echo "AWS 연결"
          docker pull ${{ secrets.DOCKER_USER_NAME }}/${{ secrets.DOCKER_IMAGE_NAME }}-f
          
          # 기존 컨테이너 중지 및 삭제
          docker stop ${{ secrets.DOCKER_IMAGE_NAME }}-f || true
          docker rm ${{ secrets.DOCKER_IMAGE_NAME }}-f || true
          
          # 도커 컴포즈 실행
          docker-compose up -d
